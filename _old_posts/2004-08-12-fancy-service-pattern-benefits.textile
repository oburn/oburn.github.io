---
layout: post
permalink: blog/fancy_service_pattern_benefits
title: Fancy Service pattern benefits
category: Java
---
<p>I see that Scot has written about the <a href="http://modular.autonomous.org/blog/2004/08/01/1091367375000.html">Fancy Service pattern</a>. I am still not sure about the name, but cannot think of a better one.</p>

<p>The real benefit of this pattern/approach that is not clearly highlighted in the document (to me) is that it allows the same business logic to be accessed via different mechanisms. On the project we were working on there was the requirement to provide both a Java (RMI-IIOP) interface and a Web Services interface to the same business logic. As Scot posted previously <a href="http://modular.autonomous.org/blog/2004/05/25/1085487072000.html">Web Services are not fast</a>.</p>

<p>The other thing the use of pattern allowed was to support parallel processing in the EJB container. We implemented a ServiceProcessor as a message driven bean, which allowed business logic to be executed concurrently. Great if you need to search to databases concurrently.</p>